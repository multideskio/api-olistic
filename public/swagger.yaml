openapi: 3.0.0
info:
  title: 'API Terapia Holistica'
  description: 'API para demonstrar endpoints básicos'
  contact:
    email: multidesk.io@gmail.com
  version: '0.1'
servers:
  -
    url: 'http://localhost:8000'
    description: 'Servidor local'
  -
    url: 'https://terapia.conect.app'
    description: 'Servidor online'
  -
    url: 'http://5.161.224.69:8800'
    description: 'Servidor online'
paths:
  /api/v1/anamneses:
    get:
      tags:
        - Anamneses
      summary: 'Listar todas as Anamneses'
      description: 'Retorna uma lista de clientes com paginação'
      operationId: 611a6437c376dac6f195d9fdef4f0993
      responses:
        '200':
          description: 'Lista de anamneses'
          content:
            application/json:
              schema:
                properties:
                  rows: { type: array, items: { type: object } }
                  pagination: { type: object }
                type: object
        '401':
          description: 'Token inválido ou ausente'
        '500':
          description: 'Erro interno do servidor'
      security:
        -
          bearerAuth: []
  /api/v1/login:
    post:
      tags:
        - Autenticação
      summary: 'Login do usuário'
      description: 'Autentica o usuário e retorna um token JWT'
      operationId: 3b889298fc72067506f70fb423b6a004
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: usuario@exemplo.com
                password:
                  type: string
                  format: password
                  example: '123456'
              type: object
      responses:
        '200':
          description: 'Token JWT gerado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  token: { type: string, example: eyJhbGciOiJIUzI1NiIsInR... }
                type: object
        '401':
          description: 'Credenciais inválidas'
        '400':
          description: 'Dados de entrada inválidos'
  /api/v1/logout:
    get:
      tags:
        - Autenticação
      summary: 'Logout do usuário'
      description: 'Realiza logout e invalida o token JWT'
      operationId: f9413ca466b6033b3b76dbc7823c0d85
      responses:
        '200':
          description: 'Logout realizado com sucesso'
        '401':
          description: 'Token inválido ou ausente'
      security:
        -
          bearerAuth: []
  /api/v1/customers:
    get:
      tags:
        - Clientes
      summary: 'Listar todos os clientes'
      description: 'Retorna uma lista de clientes com paginação'
      operationId: cfef2f8160bbb288816b3fd50fbe699b
      parameters:
        -
          name: sort_by
          in: query
          description: 'Campo para ordenação dos resultados'
          required: false
          schema:
            type: string
            default: id
            enum:
              - id
              - update
        -
          name: order
          in: query
          description: 'Ordem de ordenação (ASC ou DESC)'
          required: false
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
        -
          name: s
          in: query
          description: 'Termo de busca para filtrar os clientes'
          required: false
          schema:
            type: string
        -
          name: limite
          in: query
          description: 'Número de itens por página'
          required: false
          schema:
            type: integer
            default: 15
            maximum: 200
        -
          name: page
          in: query
          description: 'Número da página para paginação'
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: 'Lista de clientes'
          content:
            application/json:
              schema:
                properties:
                  rows: { type: array, items: { type: object } }
                  pagination: { type: object }
                type: object
        '401':
          description: 'Token inválido ou ausente'
        '500':
          description: 'Erro interno do servidor'
      security:
        -
          bearerAuth: []
    post:
      tags:
        - Clientes
      summary: 'Criar um novo cliente'
      description: 'Cria um novo cliente com os dados fornecidos'
      operationId: 42b0a2c98ea46de34f810bae6f78a3b2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                photo:
                  type: string
                  nullable: true
                birthDate:
                  type: string
                  format: date
                  nullable: true
                doc:
                  type: string
                  nullable: true
                generous:
                  type: string
                  nullable: true
              type: object
      responses:
        '201':
          description: 'Cliente criado com sucesso'
        '401':
          description: 'Token inválido ou ausente'
        '403':
          description: 'Usuário sem permissão'
        '422':
          description: 'Erro de validação'
        '500':
          description: 'Erro interno do servidor'
      security:
        -
          bearerAuth: []
  '/api/v1/customers/{id}':
    get:
      tags:
        - Clientes
      summary: 'Obter detalhes de um cliente'
      description: 'Retorna os detalhes de um cliente específico'
      operationId: 41841ce6e3057a13ab532a7ab1f96af6
      parameters:
        -
          name: id
          in: path
          description: 'ID do cliente'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Detalhes do cliente'
          content:
            application/json:
              schema:
                type: object
        '401':
          description: 'Token inválido ou ausente'
        '404':
          description: 'Cliente não encontrado'
        '500':
          description: 'Erro interno do servidor'
      security:
        -
          bearerAuth: []
    put:
      tags:
        - Clientes
      summary: 'Atualizar um cliente'
      description: 'Atualiza os dados de um cliente existente'
      operationId: 05e9e14aa12404b2a58d51869e1505f7
      parameters:
        -
          name: id
          in: path
          description: 'ID do cliente'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                photo:
                  type: string
                  nullable: true
                birthDate:
                  type: string
                  format: date
                  nullable: true
                doc:
                  type: string
                  nullable: true
                generous:
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Cliente atualizado com sucesso'
        '401':
          description: 'Token inválido ou ausente'
        '404':
          description: 'Cliente não encontrado'
        '422':
          description: 'Erro de validação'
        '500':
          description: 'Erro interno do servidor'
      security:
        -
          bearerAuth: []
    delete:
      tags:
        - Clientes
      summary: 'Excluir um cliente'
      description: 'Exclui um cliente existente'
      operationId: b96d5675d3de38142446856e2258f0fb
      parameters:
        -
          name: id
          in: path
          description: 'ID do cliente'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Cliente deletado com sucesso'
        '401':
          description: 'Token inválido ou ausente'
        '404':
          description: 'Cliente não encontrado'
        '500':
          description: 'Erro interno do servidor'
      security:
        -
          bearerAuth: []
  /api/v1/user/me:
    get:
      tags:
        - Usuários
      summary: 'Obter informações do usuário autenticado'
      description: 'Retorna as informações do usuário autenticado usando JWT'
      operationId: c01da61cb97dc778549fec55810d4b26
      responses:
        '200':
          description: 'Informações do usuário'
          content:
            application/json:
              schema:
                properties:
                  id: { type: integer, example: 1 }
                  name: { type: string, example: 'John Doe' }
                  email: { type: string, example: john.doe@example.com }
                  role: { type: string, example: PROFISSIONAL }
                  type: { type: string, example: cache }
                type: object
        '401':
          description: 'Não autorizado'
      security:
        -
          bearerAuth: []
  /api/v1/users:
    get:
      tags:
        - Usuários
      summary: 'Listar usuários'
      description: 'Retorna uma lista de usuários, com cache usando Redis'
      operationId: fb3b9d612f472659bcf1ab9f534217bd
      responses:
        '200':
          description: 'Lista de usuários'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: cache }
                  data: { type: array, items: { properties: { user: { type: integer, example: 1 }, name: { type: string, example: 'John Doe' }, email: { type: string, example: john.doe@example.com } }, type: object } }
                type: object
        '401':
          description: 'Token inválido ou ausente'
        '403':
          description: 'Usuário sem permissão'
      security:
        -
          bearerAuth: []
  '/api/v1/webhook/greem/{id_plano}':
    post:
      tags:
        - Webhooks
      summary: 'Cria um usuário com base nas informações do webhook recebido da GREEM'
      description: 'Processa o webhook da GREEM para criar ou atualizar um usuário com base nas informações da transação recebida.'
      operationId: c91254e0581a732cec2f000083d393ac
      parameters:
        -
          name: id_plano
          in: path
          description: 'ID do plano na GREEM'
          required: true
          schema:
            type: string
      requestBody:
        description: 'Dados do webhook da GREEM'
        required: true
        content:
          application/json:
            schema:
              properties:
                currentStatus:
                  description: 'Status atual da transação'
                  type: string
                  example: paid
                client:
                  description: 'Informações do cliente'
                  properties: { email: { description: 'Email do cliente', type: string }, name: { description: 'Nome do cliente', type: string } }
                  type: object
                product:
                  description: 'Informações do produto'
                  properties: { id: { description: 'ID do produto', type: integer } }
                  type: object
              type: object
      responses:
        '201':
          description: 'Transação processada com sucesso'
          content:
            application/json:
              schema:
                properties:
                  message: { description: 'Mensagem de sucesso', type: string }
                type: object
        '400':
          description: 'Requisição inválida'
        '401':
          description: 'Token inválido ou ausente'
        '403':
          description: 'Sem permissão para executar'
        '500':
          description: 'Erro interno do servidor'
  /:
    get:
      tags:
        - Status
      summary: 'Endpoint de status'
      description: 'Retorna o status da aplicação'
      operationId: 5b8bbea83af70a9a8a53b270333d2915
      responses:
        '200':
          description: 'Status da aplicação'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: Development }
                  version: { type: string, example: 1.0.0 }
                  php: { type: string, example: 8.1.2 }
                type: object
components:
  securitySchemes:
    bearerAuth:
      type: http
      bearerFormat: JWT
      scheme: bearer
tags:
  -
    name: Status
    description: ''
  -
    name: Autenticação
    description: 'Operações relacionadas à autenticação de usuários'
  -
    name: Usuários
    description: 'Gerenciamento de usuários'
  -
    name: Clientes
    description: 'Gerenciamento de clientes'
  -
    name: Anamneses
    description: 'Gerenciamento de Anamneses'
  -
    name: Webhooks
    description: 'Gerenciamento de Webhooks'
